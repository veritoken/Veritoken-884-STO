{
  "contractName": "ERC884",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "original",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "replacement",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressSuperseded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "addVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removeVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "updateVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "original",
          "type": "address"
        },
        {
          "name": "replacement",
          "type": "address"
        }
      ],
      "name": "cancelAndReissue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isVerified",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isHolder",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "hasHash",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "holderCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "holderAt",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isSuperseded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getCurrentFor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\n\n/**\n *  An `ERC20` compatible token that conforms to Delaware State Senate,\n *  149th General Assembly, Senate Bill No. 69: An act to Amend Title 8\n *  of the Delaware Code Relating to the General Corporation Law.\n *\n *  Implementation Details.\n *\n *  An implementation of this token standard SHOULD provide the following:\n *\n *  `name` - for use by wallets and exchanges.\n *  `symbol` - for use by wallets and exchanges.\n *\n *  The implementation MUST take care not to allow unauthorised access to share\n *  transfer functions.\n *\n *  In addition to the above the following optional `ERC20` function MUST be defined.\n *\n *  `decimals` â€” MUST return `0` as each token represents a single Share and Shares are non-divisible.\n *\n *  @dev Ref https://github.com/ethereum/EIPs/pull/884\n */\ncontract ERC884 is ERC20 {\n\n    /**\n     *  This event is emitted when a verified address and associated identity hash are\n     *  added to the contract.\n     *  @param addr The address that was added.\n     *  @param hash The identity hash associated with the address.\n     *  @param sender The address that caused the address to be added.\n     */\n    event VerifiedAddressAdded(\n        address indexed addr,\n        bytes32 hash,\n        address indexed sender\n    );\n\n    /**\n     *  This event is emitted when a verified address its associated identity hash are\n     *  removed from the contract.\n     *  @param addr The address that was removed.\n     *  @param sender The address that caused the address to be removed.\n     */\n    event VerifiedAddressRemoved(address indexed addr, address indexed sender);\n\n    /**\n     *  This event is emitted when the identity hash associated with a verified address is updated.\n     *  @param addr The address whose hash was updated.\n     *  @param oldHash The identity hash that was associated with the address.\n     *  @param hash The hash now associated with the address.\n     *  @param sender The address that caused the hash to be updated.\n     */\n    event VerifiedAddressUpdated(\n        address indexed addr,\n        bytes32 oldHash,\n        bytes32 hash,\n        address indexed sender\n    );\n\n    /**\n     *  This event is emitted when an address is cancelled and replaced with\n     *  a new address.  This happens in the case where a shareholder has\n     *  lost access to their original address and needs to have their share\n     *  reissued to a new address.  This is the equivalent of issuing replacement\n     *  share certificates.\n     *  @param original The address being superseded.\n     *  @param replacement The new address.\n     *  @param sender The address that caused the address to be superseded.\n     */\n    event VerifiedAddressSuperseded(\n        address indexed original,\n        address indexed replacement,\n        address indexed sender\n    );\n\n    /**\n     *  Add a verified address, along with an associated verification hash to the contract.\n     *  Upon successful addition of a verified address, the contract must emit\n     *  `VerifiedAddressAdded(addr, hash, msg.sender)`.\n     *  It MUST throw if the supplied address or hash are zero, or if the address has already been supplied.\n     *  @param addr The address of the person represented by the supplied hash.\n     *  @param hash A cryptographic hash of the address holder's verified information.\n     */\n    function addVerified(address addr, bytes32 hash) public;\n\n    /**\n     *  Remove a verified address, and the associated verification hash. If the address is\n     *  unknown to the contract then this does nothing. If the address is successfully removed, this\n     *  function must emit `VerifiedAddressRemoved(addr, msg.sender)`.\n     *  It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens.\n     *  @param addr The verified address to be removed.\n     */\n    function removeVerified(address addr) public;\n\n    /**\n     *  Update the hash for a verified address known to the contract.\n     *  Upon successful update of a verified address the contract must emit\n     *  `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`.\n     *  If the hash is the same as the value already stored then\n     *  no `VerifiedAddressUpdated` event is to be emitted.\n     *  It MUST throw if the hash is zero, or if the address is unverified.\n     *  @param addr The verified address of the person represented by the supplied hash.\n     *  @param hash A new cryptographic hash of the address holder's updated verified information.\n     */\n    function updateVerified(address addr, bytes32 hash) public;\n\n    /**\n     *  Cancel the original address and reissue the Tokens to the replacement address.\n     *  Access to this function MUST be strictly controlled.\n     *  The `original` address MUST be removed from the set of verified addresses.\n     *  Throw if the `original` address supplied is not a shareholder.\n     *  Throw if the `replacement` address is not a verified address.\n     *  Throw if the `replacement` address already holds Tokens.\n     *  This function MUST emit the `VerifiedAddressSuperseded` event.\n     *  @param original The address to be superseded. This address MUST NOT be reused.\n     */\n    function cancelAndReissue(address original, address replacement) public;\n\n    /**\n     *  The `transfer` function MUST NOT allow transfers to addresses that\n     *  have not been verified and added to the contract.\n     *  If the `to` address is not currently a shareholder then it MUST become one.\n     *  If the transfer will reduce `msg.sender`'s balance to 0 then that address\n     *  MUST be removed from the list of shareholders.\n     */\n    function transfer(address to, uint256 value) public returns (bool);\n\n    /**\n     *  The `transferFrom` function MUST NOT allow transfers to addresses that\n     *  have not been verified and added to the contract.\n     *  If the `to` address is not currently a shareholder then it MUST become one.\n     *  If the transfer will reduce `from`'s balance to 0 then that address\n     *  MUST be removed from the list of shareholders.\n     */\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n\n    /**\n     *  Tests that the supplied address is known to the contract.\n     *  @param addr The address to test.\n     *  @return true if the address is known to the contract.\n     */\n    function isVerified(address addr) public view returns (bool);\n\n    /**\n     *  Checks to see if the supplied address is a share holder.\n     *  @param addr The address to check.\n     *  @return true if the supplied address owns a token.\n     */\n    function isHolder(address addr) public view returns (bool);\n\n    /**\n     *  Checks that the supplied hash is associated with the given address.\n     *  @param addr The address to test.\n     *  @param hash The hash to test.\n     *  @return true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`.\n     */\n    function hasHash(address addr, bytes32 hash) public view returns (bool);\n\n    /**\n     *  The number of addresses that hold tokens.\n     *  @return the number of unique addresses that hold tokens.\n     */\n    function holderCount() public view returns (uint);\n\n    /**\n     *  By counting the number of token holders using `holderCount`\n     *  you can retrieve the complete list of token holders, one at a time.\n     *  It MUST throw if `index >= holderCount()`.\n     *  @param index The zero-based index of the holder.\n     *  @return the address of the token holder with the given index.\n     */\n    function holderAt(uint256 index) public view returns (address);\n\n    /**\n     *  Checks to see if the supplied address was superseded.\n     *  @param addr The address to check.\n     *  @return true if the supplied address was superseded by another address.\n     */\n    function isSuperseded(address addr) public view returns (bool);\n\n    /**\n     *  Gets the most recent address, given a superseded one.\n     *  Addresses may be superseded multiple times, so this function needs to\n     *  follow the chain of addresses until it reaches the final, verified address.\n     *  @param addr The superseded address.\n     *  @return the verified address that ultimately holds the share.\n     */\n    function getCurrentFor(address addr) public view returns (address);\n}\n",
  "sourcePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884.sol",
  "ast": {
    "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884.sol",
    "exportedSymbols": {
      "ERC884": [303]
    },
    "id": 304,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 304,
        "sourceUnit": 1539,
        "src": "26:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 174,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1538,
              "src": "899:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1538",
                "typeString": "contract ERC20"
              }
            },
            "id": 175,
            "nodeType": "InheritanceSpecifier",
            "src": "899:5:2"
          }
        ],
        "contractDependencies": [1538, 1570],
        "contractKind": "contract",
        "documentation": " An `ERC20` compatible token that conforms to Delaware State Senate,\n 149th General Assembly, Senate Bill No. 69: An act to Amend Title 8\n of the Delaware Code Relating to the General Corporation Law.\n *  Implementation Details.\n *  An implementation of this token standard SHOULD provide the following:\n *  `name` - for use by wallets and exchanges.\n `symbol` - for use by wallets and exchanges.\n *  The implementation MUST take care not to allow unauthorised access to share\n transfer functions.\n *  In addition to the above the following optional `ERC20` function MUST be defined.\n *  `decimals` â€” MUST return `0` as each token represents a single Share and Shares are non-divisible.\n *  @dev Ref https://github.com/ethereum/EIPs/pull/884",
        "fullyImplemented": false,
        "id": 303,
        "linearizedBaseContracts": [303, 1538, 1570],
        "name": "ERC884",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": " This event is emitted when a verified address and associated identity hash are\n added to the contract.\n @param addr The address that was added.\n @param hash The identity hash associated with the address.\n @param sender The address that caused the address to be added.",
            "id": 183,
            "name": "VerifiedAddressAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1268:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1298:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1320:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:90:2"
            },
            "src": "1232:117:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when a verified address its associated identity hash are\n removed from the contract.\n @param addr The address that was removed.\n @param sender The address that caused the address to be removed.",
            "id": 189,
            "name": "VerifiedAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1645:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1667:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1644:46:2"
            },
            "src": "1616:75:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when the identity hash associated with a verified address is updated.\n @param addr The address whose hash was updated.\n @param oldHash The identity hash that was associated with the address.\n @param hash The hash now associated with the address.\n @param sender The address that caused the hash to be updated.",
            "id": 199,
            "name": "VerifiedAddressUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2118:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "indexed": false,
                  "name": "oldHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2148:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2148:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2173:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2195:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2108:115:2"
            },
            "src": "2080:144:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when an address is cancelled and replaced with\n a new address.  This happens in the case where a shareholder has\n lost access to their original address and needs to have their share\n reissued to a new address.  This is the equivalent of issuing replacement\n share certificates.\n @param original The address being superseded.\n @param replacement The new address.\n @param sender The address that caused the address to be superseded.",
            "id": 207,
            "name": "VerifiedAddressSuperseded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": true,
                  "name": "original",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2797:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "indexed": true,
                  "name": "replacement",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2831:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2868:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2787:109:2"
            },
            "src": "2756:141:2"
          },
          {
            "body": null,
            "documentation": " Add a verified address, along with an associated verification hash to the contract.\n Upon successful addition of a verified address, the contract must emit\n `VerifiedAddressAdded(addr, hash, msg.sender)`.\n It MUST throw if the supplied address or hash are zero, or if the address has already been supplied.\n @param addr The address of the person represented by the supplied hash.\n @param hash A cryptographic hash of the address holder's verified information.",
            "id": 214,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3443:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3457:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3442:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3477:0:2"
            },
            "scope": 303,
            "src": "3422:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Remove a verified address, and the associated verification hash. If the address is\n unknown to the contract then this does nothing. If the address is successfully removed, this\n function must emit `VerifiedAddressRemoved(addr, msg.sender)`.\n It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens.\n @param addr The verified address to be removed.",
            "id": 219,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "removeVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "3933:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3933:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3932:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3953:0:2"
            },
            "scope": 303,
            "src": "3909:45:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Update the hash for a verified address known to the contract.\n Upon successful update of a verified address the contract must emit\n `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`.\n If the hash is the same as the value already stored then\n no `VerifiedAddressUpdated` event is to be emitted.\n It MUST throw if the hash is zero, or if the address is unverified.\n @param addr The verified address of the person represented by the supplied hash.\n @param hash A new cryptographic hash of the address holder's updated verified information.",
            "id": 226,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "4602:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "4616:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4601:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4636:0:2"
            },
            "scope": 303,
            "src": "4578:59:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Cancel the original address and reissue the Tokens to the replacement address.\n Access to this function MUST be strictly controlled.\n The `original` address MUST be removed from the set of verified addresses.\n Throw if the `original` address supplied is not a shareholder.\n Throw if the `replacement` address is not a verified address.\n Throw if the `replacement` address already holds Tokens.\n This function MUST emit the `VerifiedAddressSuperseded` event.\n @param original The address to be superseded. This address MUST NOT be reused.",
            "id": 233,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "cancelAndReissue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "original",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "5280:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5280:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "replacement",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "5298:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5279:39:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5325:0:2"
            },
            "scope": 303,
            "src": "5254:72:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The `transfer` function MUST NOT allow transfers to addresses that\n have not been verified and added to the contract.\n If the `to` address is not currently a shareholder then it MUST become one.\n If the transfer will reduce `msg.sender`'s balance to 0 then that address\n MUST be removed from the list of shareholders.",
            "id": 242,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5720:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5732:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5719:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5763:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5762:6:2"
            },
            "scope": 303,
            "src": "5702:67:2",
            "stateMutability": "nonpayable",
            "superFunction": 1561,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The `transferFrom` function MUST NOT allow transfers to addresses that\n have not been verified and added to the contract.\n If the `to` address is not currently a shareholder then it MUST become one.\n If the transfer will reduce `from`'s balance to 0 then that address\n MUST be removed from the list of shareholders.",
            "id": 253,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6165:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6179:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6191:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6164:41:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6222:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6221:6:2"
            },
            "scope": 303,
            "src": "6143:85:2",
            "stateMutability": "nonpayable",
            "superFunction": 1520,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Tests that the supplied address is known to the contract.\n @param addr The address to test.\n @return true if the address is known to the contract.",
            "id": 260,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "6439:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6438:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "6474:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6473:6:2"
            },
            "scope": 303,
            "src": "6419:61:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks to see if the supplied address is a share holder.\n @param addr The address to check.\n @return true if the supplied address owns a token.",
            "id": 267,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "6686:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6685:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "6721:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6721:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6720:6:2"
            },
            "scope": 303,
            "src": "6668:59:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks that the supplied hash is associated with the given address.\n @param addr The address to test.\n @param hash The hash to test.\n @return true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`.",
            "id": 276,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "hasHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7035:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7049:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7034:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7084:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7084:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7083:6:2"
            },
            "scope": 303,
            "src": "7018:72:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The number of addresses that hold tokens.\n @return the number of unique addresses that hold tokens.",
            "id": 281,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "holderCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7247:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7271:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7271:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7270:6:2"
            },
            "scope": 303,
            "src": "7227:50:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " By counting the number of token holders using `holderCount`\n you can retrieve the complete list of token holders, one at a time.\n It MUST throw if `index >= holderCount()`.\n @param index The zero-based index of the holder.\n @return the address of the token holder with the given index.",
            "id": 288,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "holderAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "7639:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7639:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7638:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "7675:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7675:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7674:9:2"
            },
            "scope": 303,
            "src": "7621:63:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks to see if the supplied address was superseded.\n @param addr The address to check.\n @return true if the supplied address was superseded by another address.",
            "id": 295,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isSuperseded",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "7912:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7912:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7911:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "7947:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7947:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7946:6:2"
            },
            "scope": 303,
            "src": "7890:63:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Gets the most recent address, given a superseded one.\n Addresses may be superseded multiple times, so this function needs to\n follow the chain of addresses until it reaches the final, verified address.\n @param addr The superseded address.\n @return the verified address that ultimately holds the share.",
            "id": 302,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "8336:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8336:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8335:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "8371:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:9:2"
            },
            "scope": 303,
            "src": "8313:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 304,
        "src": "880:7502:2"
      }
    ],
    "src": "0:8383:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884.sol",
    "exportedSymbols": {
      "ERC884": [303]
    },
    "id": 304,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 304,
        "sourceUnit": 1539,
        "src": "26:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 174,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1538,
              "src": "899:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1538",
                "typeString": "contract ERC20"
              }
            },
            "id": 175,
            "nodeType": "InheritanceSpecifier",
            "src": "899:5:2"
          }
        ],
        "contractDependencies": [1538, 1570],
        "contractKind": "contract",
        "documentation": " An `ERC20` compatible token that conforms to Delaware State Senate,\n 149th General Assembly, Senate Bill No. 69: An act to Amend Title 8\n of the Delaware Code Relating to the General Corporation Law.\n *  Implementation Details.\n *  An implementation of this token standard SHOULD provide the following:\n *  `name` - for use by wallets and exchanges.\n `symbol` - for use by wallets and exchanges.\n *  The implementation MUST take care not to allow unauthorised access to share\n transfer functions.\n *  In addition to the above the following optional `ERC20` function MUST be defined.\n *  `decimals` â€” MUST return `0` as each token represents a single Share and Shares are non-divisible.\n *  @dev Ref https://github.com/ethereum/EIPs/pull/884",
        "fullyImplemented": false,
        "id": 303,
        "linearizedBaseContracts": [303, 1538, 1570],
        "name": "ERC884",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": " This event is emitted when a verified address and associated identity hash are\n added to the contract.\n @param addr The address that was added.\n @param hash The identity hash associated with the address.\n @param sender The address that caused the address to be added.",
            "id": 183,
            "name": "VerifiedAddressAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1268:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1298:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1320:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:90:2"
            },
            "src": "1232:117:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when a verified address its associated identity hash are\n removed from the contract.\n @param addr The address that was removed.\n @param sender The address that caused the address to be removed.",
            "id": 189,
            "name": "VerifiedAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1645:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1667:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1644:46:2"
            },
            "src": "1616:75:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when the identity hash associated with a verified address is updated.\n @param addr The address whose hash was updated.\n @param oldHash The identity hash that was associated with the address.\n @param hash The hash now associated with the address.\n @param sender The address that caused the hash to be updated.",
            "id": 199,
            "name": "VerifiedAddressUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2118:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "indexed": false,
                  "name": "oldHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2148:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2148:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2173:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2195:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2108:115:2"
            },
            "src": "2080:144:2"
          },
          {
            "anonymous": false,
            "documentation": " This event is emitted when an address is cancelled and replaced with\n a new address.  This happens in the case where a shareholder has\n lost access to their original address and needs to have their share\n reissued to a new address.  This is the equivalent of issuing replacement\n share certificates.\n @param original The address being superseded.\n @param replacement The new address.\n @param sender The address that caused the address to be superseded.",
            "id": 207,
            "name": "VerifiedAddressSuperseded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": true,
                  "name": "original",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2797:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "indexed": true,
                  "name": "replacement",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2831:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2868:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2787:109:2"
            },
            "src": "2756:141:2"
          },
          {
            "body": null,
            "documentation": " Add a verified address, along with an associated verification hash to the contract.\n Upon successful addition of a verified address, the contract must emit\n `VerifiedAddressAdded(addr, hash, msg.sender)`.\n It MUST throw if the supplied address or hash are zero, or if the address has already been supplied.\n @param addr The address of the person represented by the supplied hash.\n @param hash A cryptographic hash of the address holder's verified information.",
            "id": 214,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3443:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3457:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3442:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3477:0:2"
            },
            "scope": 303,
            "src": "3422:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Remove a verified address, and the associated verification hash. If the address is\n unknown to the contract then this does nothing. If the address is successfully removed, this\n function must emit `VerifiedAddressRemoved(addr, msg.sender)`.\n It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens.\n @param addr The verified address to be removed.",
            "id": 219,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "removeVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "3933:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3933:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3932:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3953:0:2"
            },
            "scope": 303,
            "src": "3909:45:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Update the hash for a verified address known to the contract.\n Upon successful update of a verified address the contract must emit\n `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`.\n If the hash is the same as the value already stored then\n no `VerifiedAddressUpdated` event is to be emitted.\n It MUST throw if the hash is zero, or if the address is unverified.\n @param addr The verified address of the person represented by the supplied hash.\n @param hash A new cryptographic hash of the address holder's updated verified information.",
            "id": 226,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "4602:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "4616:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4601:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4636:0:2"
            },
            "scope": 303,
            "src": "4578:59:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Cancel the original address and reissue the Tokens to the replacement address.\n Access to this function MUST be strictly controlled.\n The `original` address MUST be removed from the set of verified addresses.\n Throw if the `original` address supplied is not a shareholder.\n Throw if the `replacement` address is not a verified address.\n Throw if the `replacement` address already holds Tokens.\n This function MUST emit the `VerifiedAddressSuperseded` event.\n @param original The address to be superseded. This address MUST NOT be reused.",
            "id": 233,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "cancelAndReissue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "original",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "5280:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5280:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "replacement",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "5298:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5279:39:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5325:0:2"
            },
            "scope": 303,
            "src": "5254:72:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The `transfer` function MUST NOT allow transfers to addresses that\n have not been verified and added to the contract.\n If the `to` address is not currently a shareholder then it MUST become one.\n If the transfer will reduce `msg.sender`'s balance to 0 then that address\n MUST be removed from the list of shareholders.",
            "id": 242,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5720:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5732:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5719:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "5763:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5762:6:2"
            },
            "scope": 303,
            "src": "5702:67:2",
            "stateMutability": "nonpayable",
            "superFunction": 1561,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The `transferFrom` function MUST NOT allow transfers to addresses that\n have not been verified and added to the contract.\n If the `to` address is not currently a shareholder then it MUST become one.\n If the transfer will reduce `from`'s balance to 0 then that address\n MUST be removed from the list of shareholders.",
            "id": 253,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6165:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6179:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6191:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6164:41:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6222:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6221:6:2"
            },
            "scope": 303,
            "src": "6143:85:2",
            "stateMutability": "nonpayable",
            "superFunction": 1520,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Tests that the supplied address is known to the contract.\n @param addr The address to test.\n @return true if the address is known to the contract.",
            "id": 260,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isVerified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "6439:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6438:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "6474:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6473:6:2"
            },
            "scope": 303,
            "src": "6419:61:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks to see if the supplied address is a share holder.\n @param addr The address to check.\n @return true if the supplied address owns a token.",
            "id": 267,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "6686:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6685:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "6721:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6721:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6720:6:2"
            },
            "scope": 303,
            "src": "6668:59:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks that the supplied hash is associated with the given address.\n @param addr The address to test.\n @param hash The hash to test.\n @return true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`.",
            "id": 276,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "hasHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7035:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7049:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7034:28:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "7084:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7084:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7083:6:2"
            },
            "scope": 303,
            "src": "7018:72:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " The number of addresses that hold tokens.\n @return the number of unique addresses that hold tokens.",
            "id": 281,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "holderCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7247:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7271:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7271:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7270:6:2"
            },
            "scope": 303,
            "src": "7227:50:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " By counting the number of token holders using `holderCount`\n you can retrieve the complete list of token holders, one at a time.\n It MUST throw if `index >= holderCount()`.\n @param index The zero-based index of the holder.\n @return the address of the token holder with the given index.",
            "id": 288,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "holderAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "7639:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7639:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7638:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "7675:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7675:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7674:9:2"
            },
            "scope": 303,
            "src": "7621:63:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Checks to see if the supplied address was superseded.\n @param addr The address to check.\n @return true if the supplied address was superseded by another address.",
            "id": 295,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isSuperseded",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "7912:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7912:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7911:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "7947:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7947:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7946:6:2"
            },
            "scope": 303,
            "src": "7890:63:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": " Gets the most recent address, given a superseded one.\n Addresses may be superseded multiple times, so this function needs to\n follow the chain of addresses until it reaches the final, verified address.\n @param addr The superseded address.\n @return the verified address that ultimately holds the share.",
            "id": 302,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "8336:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8336:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8335:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "8371:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:9:2"
            },
            "scope": 303,
            "src": "8313:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 304,
        "src": "880:7502:2"
      }
    ],
    "src": "0:8383:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-03T18:13:32.910Z",
  "devdoc": {
    "methods": {
      "addVerified(address,bytes32)": {
        "params": {
          "addr": "The address of the person represented by the supplied hash.",
          "hash": "A cryptographic hash of the address holder's verified information."
        }
      },
      "cancelAndReissue(address,address)": {
        "params": {
          "original": "The address to be superseded. This address MUST NOT be reused."
        }
      },
      "getCurrentFor(address)": {
        "params": {
          "addr": "The superseded address."
        },
        "return": "the verified address that ultimately holds the share."
      },
      "hasHash(address,bytes32)": {
        "params": {
          "addr": "The address to test.",
          "hash": "The hash to test."
        },
        "return": "true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`."
      },
      "holderAt(uint256)": {
        "params": {
          "index": "The zero-based index of the holder."
        },
        "return": "the address of the token holder with the given index."
      },
      "holderCount()": {
        "return": "the number of unique addresses that hold tokens."
      },
      "isHolder(address)": {
        "params": {
          "addr": "The address to check."
        },
        "return": "true if the supplied address owns a token."
      },
      "isSuperseded(address)": {
        "params": {
          "addr": "The address to check."
        },
        "return": "true if the supplied address was superseded by another address."
      },
      "isVerified(address)": {
        "params": {
          "addr": "The address to test."
        },
        "return": "true if the address is known to the contract."
      },
      "removeVerified(address)": {
        "params": {
          "addr": "The verified address to be removed."
        }
      },
      "updateVerified(address,bytes32)": {
        "params": {
          "addr": "The verified address of the person represented by the supplied hash.",
          "hash": "A new cryptographic hash of the address holder's updated verified information."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addVerified(address,bytes32)": {
        "notice": "Add a verified address, along with an associated verification hash to the contract. Upon successful addition of a verified address, the contract must emit `VerifiedAddressAdded(addr, hash, msg.sender)`. It MUST throw if the supplied address or hash are zero, or if the address has already been supplied."
      },
      "cancelAndReissue(address,address)": {
        "notice": "Cancel the original address and reissue the Tokens to the replacement address. Access to this function MUST be strictly controlled. The `original` address MUST be removed from the set of verified addresses. Throw if the `original` address supplied is not a shareholder. Throw if the `replacement` address is not a verified address. Throw if the `replacement` address already holds Tokens. This function MUST emit the `VerifiedAddressSuperseded` event."
      },
      "getCurrentFor(address)": {
        "notice": "Gets the most recent address, given a superseded one. Addresses may be superseded multiple times, so this function needs to follow the chain of addresses until it reaches the final, verified address."
      },
      "hasHash(address,bytes32)": {
        "notice": "Checks that the supplied hash is associated with the given address."
      },
      "holderAt(uint256)": {
        "notice": "By counting the number of token holders using `holderCount` you can retrieve the complete list of token holders, one at a time. It MUST throw if `index >= holderCount()`."
      },
      "holderCount()": {
        "notice": "The number of addresses that hold tokens."
      },
      "isHolder(address)": {
        "notice": "Checks to see if the supplied address is a share holder."
      },
      "isSuperseded(address)": {
        "notice": "Checks to see if the supplied address was superseded."
      },
      "isVerified(address)": {
        "notice": "Tests that the supplied address is known to the contract."
      },
      "removeVerified(address)": {
        "notice": "Remove a verified address, and the associated verification hash. If the address is unknown to the contract then this does nothing. If the address is successfully removed, this function must emit `VerifiedAddressRemoved(addr, msg.sender)`. It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens."
      },
      "transfer(address,uint256)": {
        "notice": "The `transfer` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `msg.sender`'s balance to 0 then that address MUST be removed from the list of shareholders."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The `transferFrom` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `from`'s balance to 0 then that address MUST be removed from the list of shareholders."
      },
      "updateVerified(address,bytes32)": {
        "notice": "Update the hash for a verified address known to the contract. Upon successful update of a verified address the contract must emit `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`. If the hash is the same as the value already stored then no `VerifiedAddressUpdated` event is to be emitted. It MUST throw if the hash is zero, or if the address is unverified."
      }
    }
  }
}
