{
  "contractName": "Veritoken884",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x05d2035b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "holderAt",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x197bc336"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "holderCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1aab9a9f"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isSuperseded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2da7293e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "updateVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x354b7b1d"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x355274ea"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removeVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4487b392"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "addVerified",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x47089f62"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x66188463"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "original",
          "type": "address"
        },
        {
          "name": "replacement",
          "type": "address"
        }
      ],
      "name": "cancelAndReissue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x79f64720"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x7d64bcb4"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isVerified",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb9209e33"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getCurrentFor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xcc397ed3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isHolder",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd4d7b19a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd73dd623"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "hasHash",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf3221c7f"
    },
    {
      "inputs": [
        {
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event",
      "signature": "0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event",
      "signature": "0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event",
      "signature": "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressAdded",
      "type": "event",
      "signature": "0xb4f9d1d687d745820ae7c948518d6eef182cfbf5ef20b5b6a33769059592e7c8"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressRemoved",
      "type": "event",
      "signature": "0x8071c01a493142de896a206c19ca180d32e91d6486fcf11ea299f569f5d922b5"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressUpdated",
      "type": "event",
      "signature": "0x63ec12603f028c6f74dc3c59a67d645d431250142b56676015d25475ee3fc3d3"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "original",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "replacement",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "VerifiedAddressSuperseded",
      "type": "event",
      "signature": "0xb64971100522354f3d25283cb14e2eefcb0dd26a757482ccfe42479d0a686857"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"holderAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isSuperseded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"updateVerified\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeVerified\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"addVerified\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"original\",\"type\":\"address\"},{\"name\":\"replacement\",\"type\":\"address\"}],\"name\":\"cancelAndReissue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getCurrentFor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"hasHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"capacity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VerifiedAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VerifiedAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VerifiedAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"original\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"replacement\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VerifiedAddressSuperseded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addVerified(address,bytes32)\":{\"params\":{\"addr\":\"The address of the person represented by the supplied hash.\",\"hash\":\"A cryptographic hash of the address holder's verified information.\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"cancelAndReissue(address,address)\":{\"params\":{\"original\":\"The address to be superseded. This address MUST NOT be reused.\",\"replacement\":\"The address  that supersedes the original. This address MUST be verified.\"}},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"getCurrentFor(address)\":{\"params\":{\"addr\":\"The superseded address.\"},\"return\":\"the verified address that ultimately holds the share.\"},\"hasHash(address,bytes32)\":{\"params\":{\"addr\":\"The address to test.\",\"hash\":\"The hash to test.\"},\"return\":\"true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`.\"},\"holderAt(uint256)\":{\"params\":{\"index\":\"The zero-based index of the holder.\"},\"return\":\"the address of the token holder with the given index.\"},\"holderCount()\":{\"return\":\"the number of unique addresses that own tokens.\"},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"isHolder(address)\":{\"params\":{\"addr\":\"The address to check.\"},\"return\":\"true if the supplied address owns a token.\"},\"isSuperseded(address)\":{\"params\":{\"addr\":\"The address to check.\"},\"return\":\"true if the supplied address was superseded by another address.\"},\"isVerified(address)\":{\"params\":{\"addr\":\"The address to test.\"},\"return\":\"true if the address is known to the contract.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"removeVerified(address)\":{\"params\":{\"addr\":\"The verified address to be removed.\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"updateVerified(address,bytes32)\":{\"params\":{\"addr\":\"The verified address of the person represented by the supplied hash.\",\"hash\":\"A new cryptographic hash of the address holder's updated verified information.\"}}}},\"userdoc\":{\"methods\":{\"addVerified(address,bytes32)\":{\"notice\":\"Add a verified address, along with an associated verification hash to the contract. Upon successful addition of a verified address, the contract must emit `VerifiedAddressAdded(addr, hash, msg.sender)`. It MUST throw if the supplied address or hash are zero, or if the address has already been supplied.\"},\"cancelAndReissue(address,address)\":{\"notice\":\"Cancel the original address and reissue the Tokens to the replacement address. Access to this function MUST be strictly controlled. The `original` address MUST be removed from the set of verified addresses. Throw if the `original` address supplied is not a shareholder. Throw if the replacement address is not a verified address. This function MUST emit the `VerifiedAddressSuperseded` event.\"},\"getCurrentFor(address)\":{\"notice\":\"Gets the most recent address, given a superseded one. Addresses may be superseded multiple times, so this function needs to follow the chain of addresses until it reaches the final, verified address.\"},\"hasHash(address,bytes32)\":{\"notice\":\"Checks that the supplied hash is associated with the given address.\"},\"holderAt(uint256)\":{\"notice\":\"By counting the number of token holders using `holderCount` you can retrieve the complete list of token holders, one at a time. It MUST throw if `index >= holderCount()`.\"},\"holderCount()\":{\"notice\":\"The number of addresses that own tokens.\"},\"isHolder(address)\":{\"notice\":\"Checks to see if the supplied address is a share holder.\"},\"isSuperseded(address)\":{\"notice\":\"Checks to see if the supplied address was superseded.\"},\"isVerified(address)\":{\"notice\":\"Tests that the supplied address is known to the contract.\"},\"removeVerified(address)\":{\"notice\":\"Remove a verified address, and the associated verification hash. If the address is unknown to the contract then this does nothing. If the address is successfully removed, this function must emit `VerifiedAddressRemoved(addr, msg.sender)`. It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transfer(address,uint256)\":{\"notice\":\"The `transfer` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `msg.sender`'s balance to 0 then that address MUST be removed from the list of shareholders.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The `transferFrom` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `from`'s balance to 0 then that address MUST be removed from the list of shareholders.\"},\"updateVerified(address,bytes32)\":{\"notice\":\"Update the hash for a verified address known to the contract. Upon successful update of a verified address the contract must emit `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`. If the hash is the same as the value already stored then no `VerifiedAddressUpdated` event is to be emitted. It MUST throw if the hash is zero, or if the address is unverified.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/Veritoken884.sol\":\"Veritoken884\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884.sol\":{\"keccak256\":\"0x1e8a44f3b24910c9c7e6fc25e9bf47b04c140b7a87710a8704a1f8c5dbf79575\",\"urls\":[\"bzzr://0ad2a0cd5272f815358e9745217b9a9153aebd31ae6cc7536dbe30f245c156f2\"]},\"/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884ReferenceImpl.sol\":{\"keccak256\":\"0xf37b9adb59d38e3b6ea503d23b0eb6e2fc30ceab08c323cc85a0abdb03ec3eaf\",\"urls\":[\"bzzr://165d2bf724ad1b51aaef5871237ae4e4355e2316904d57a6ea6afc00df37be20\"]},\"/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/Veritoken884.sol\":{\"keccak256\":\"0x78b33ad2da6f096ad1b30dcba1ebf58cf1cba23930af985eb6c40396f9e5b89e\",\"urls\":[\"bzzr://11f14bfc8c2d7a993025a8c6502b3f81e1966b73bd6ce67268bb5abb2cb421c8\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol\":{\"keccak256\":\"0xec7741e47915d2ad118fa9e7040e579d2bd4295cd3079fecc7b6759d4a64d88e\",\"urls\":[\"bzzr://b3c03d76c3b51d9737c172994cef05a68bc92b8c8829d1cfe1813c09777c6a7c\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\":{\"keccak256\":\"0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf\",\"urls\":[\"bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7\"]},\"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600360146101000a81548160ff02191690831515021790555060006004556040805190810160405280600381526020017f5654470000000000000000000000000000000000000000000000000000000000815250600a90805190602001906200007192919062000152565b506040805190810160405280601881526020017f56657269746f6b656e20536563757269747920546f6b656e0000000000000000815250600b9080519060200190620000bf92919062000152565b50348015620000cd57600080fd5b5060405160208062003551833981018060405281019080805190602001909291905050508033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000811115156200014357600080fd5b80600981905550505062000201565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019557805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c5578251825591602001919060010190620001a8565b5b509050620001d59190620001d9565b5090565b620001fe91905b80821115620001fa576000816000905550600101620001e0565b5090565b90565b61334080620002116000396000f300608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461017a57806306fdde03146101a9578063095ea7b31461023957806318160ddd1461029e578063197bc336146102c95780631aab9a9f1461033657806323b872dd146103615780632da7293e146103e6578063313ce56714610441578063354b7b1d1461046c578063355274ea146104bd57806340c10f19146104e85780634487b3921461054d57806347089f621461059057806366188463146105e157806370a0823114610646578063715018a61461069d57806379f64720146106b45780637d64bcb4146107175780638da5cb5b1461074657806395d89b411461079d578063a9059cbb1461082d578063b9209e3314610892578063cc397ed3146108ed578063d4d7b19a14610970578063d73dd623146109cb578063dd62ed3e14610a30578063f2fde38b14610aa7578063f3221c7f14610aea575b600080fd5b34801561018657600080fd5b5061018f610b53565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b66565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101fe5780820151818401526020810190506101e3565b50505050905090810190601f16801561022b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024557600080fd5b50610284600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b604051808215151515815260200191505060405180910390f35b3480156102aa57600080fd5b506102b3610cf6565b6040518082815260200191505060405180910390f35b3480156102d557600080fd5b506102f460048036038101908080359060200190929190505050610d00565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034257600080fd5b5061034b610db2565b6040518082815260200191505060405180910390f35b34801561036d57600080fd5b506103cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e1b565b604051808215151515815260200191505060405180910390f35b3480156103f257600080fd5b50610427600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea0565b604051808215151515815260200191505060405180910390f35b34801561044d57600080fd5b50610456610f95565b6040518082815260200191505060405180910390f35b34801561047857600080fd5b506104bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610f9b565b005b3480156104c957600080fd5b506104d261118e565b6040518082815260200191505060405180910390f35b3480156104f457600080fd5b50610533600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611194565b604051808215151515815260200191505060405180910390f35b34801561055957600080fd5b5061058e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111cd565b005b34801561059c57600080fd5b506105df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050611374565b005b3480156105ed57600080fd5b5061062c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115d5565b604051808215151515815260200191505060405180910390f35b34801561065257600080fd5b50610687600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611867565b6040518082815260200191505060405180910390f35b3480156106a957600080fd5b506106b26118af565b005b3480156106c057600080fd5b50610715600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119b4565b005b34801561072357600080fd5b5061072c611e79565b604051808215151515815260200191505060405180910390f35b34801561075257600080fd5b5061075b611f41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107a957600080fd5b506107b2611f67565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f25780820151818401526020810190506107d7565b50505050905090810190601f16801561081f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561083957600080fd5b50610878600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612005565b604051808215151515815260200191505060405180910390f35b34801561089e57600080fd5b506108d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612088565b604051808215151515815260200191505060405180910390f35b3480156108f957600080fd5b5061092e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097c57600080fd5b506109b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061214d565b604051808215151515815260200191505060405180910390f35b3480156109d757600080fd5b50610a16600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612199565b604051808215151515815260200191505060405180910390f35b348015610a3c57600080fd5b50610a91600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612395565b6040518082815260200191505060405180910390f35b348015610ab357600080fd5b50610ae8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061241c565b005b348015610af657600080fd5b50610b39600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050612484565b604051808215151515815260200191505060405180910390f35b600360149054906101000a900460ff1681565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d5e57600080fd5b60088054905082101515610d7157600080fd5b600882815481101515610d8057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e1057600080fd5b600880549050905090565b600082600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515610e7857600080fd5b610e8184612516565b610e8b858461260a565b610e9685858561282c565b9150509392505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610efe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60045481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ff957600080fd5b82600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161415151561105457600080fd5b60006001026000191683600019161415151561106f57600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150826000191682600019161415156111885782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f63ec12603f028c6f74dc3c59a67d645d431250142b56676015d25475ee3fc3d3848660405180836000191660001916815260200182600019166000191681526020019250505060405180910390a35b50505050565b60095481565b60006009546111ae83600154612be790919063ffffffff16565b111515156111bb57600080fd5b6111c58383612c03565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561122957600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561127657600080fd5b600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001916141515611371576000600102600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8071c01a493142de896a206c19ca180d32e91d6486fcf11ea299f569f5d922b560405160405180910390a35b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113d057600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561146b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114a757600080fd5b6000600102600019168260001916141515156114c257600080fd5b600060010260001916600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151561151b57600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb4f9d1d687d745820ae7c948518d6eef182cfbf5ef20b5b6a33769059592e7c88460405180826000191660001916815260200191505060405180910390a3505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156116e7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061177b565b6116fa8382612cf490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190b57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a1257600080fd5b826000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515611a6257600080fd5b826000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515611ab157600080fd5b83600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515611b0c57600080fd5b6000600102600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816000191690555084600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403935084600885815481101515611c2b57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb64971100522354f3d25283cb14e2eefcb0dd26a757482ccfe42479d0a68685760405160405180910390a4505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ed757600080fd5b600360149054906101000a900460ff16151515611ef357600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ffd5780601f10611fd257610100808354040283529160200191611ffd565b820191906000526020600020905b815481529060010190602001808311611fe057829003601f168201915b505050505081565b600082600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161415151561206257600080fd5b61206b84612516565b612075338461260a565b61207f8484612d0d565b91505092915050565b60008060010260001916600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614159050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561213d57600080fd5b61214682612f2d565b9050919050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414159050919050565b600061222a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561247857600080fd5b61248181612fe1565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156124c35760009050612510565b8160001916600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161490505b92915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156126075760088190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600080600080846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039350600084111561266157612824565b6001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403925060016008805490500391506008828154811015156126c057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806008848154811015156126fd57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060088054809190600190036127dd91906132c3565b506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050505050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561287b57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561290657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561294257600080fd5b612993826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612a26826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612af782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60008183019050828110151515612bfa57fe5b80905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c6157600080fd5b600360149054906101000a900460ff16151515612c7d57600080fd5b82600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515612cd857600080fd5b612ce184612516565b612ceb84846130dd565b91505092915050565b6000828211151515612d0257fe5b818303905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612d5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612d9857600080fd5b612de9826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e7c826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612fcf57829150612fdb565b612fd881612f2d565b91505b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561301d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561313b57600080fd5b600360149054906101000a900460ff1615151561315757600080fd5b61316c82600154612be790919063ffffffff16565b6001819055506131c3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b8154818355818111156132ea578183600052602060002091820191016132e991906132ef565b5b505050565b61331191905b8082111561330d5760008160009055506001016132f5565b5090565b905600a165627a7a723058208a8f9202b217569a5d4119080ff53a3bf614139d5d15db21a2ec45ca5ebcedf70029",
  "deployedBytecode": "0x608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461017a57806306fdde03146101a9578063095ea7b31461023957806318160ddd1461029e578063197bc336146102c95780631aab9a9f1461033657806323b872dd146103615780632da7293e146103e6578063313ce56714610441578063354b7b1d1461046c578063355274ea146104bd57806340c10f19146104e85780634487b3921461054d57806347089f621461059057806366188463146105e157806370a0823114610646578063715018a61461069d57806379f64720146106b45780637d64bcb4146107175780638da5cb5b1461074657806395d89b411461079d578063a9059cbb1461082d578063b9209e3314610892578063cc397ed3146108ed578063d4d7b19a14610970578063d73dd623146109cb578063dd62ed3e14610a30578063f2fde38b14610aa7578063f3221c7f14610aea575b600080fd5b34801561018657600080fd5b5061018f610b53565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b66565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101fe5780820151818401526020810190506101e3565b50505050905090810190601f16801561022b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024557600080fd5b50610284600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b604051808215151515815260200191505060405180910390f35b3480156102aa57600080fd5b506102b3610cf6565b6040518082815260200191505060405180910390f35b3480156102d557600080fd5b506102f460048036038101908080359060200190929190505050610d00565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034257600080fd5b5061034b610db2565b6040518082815260200191505060405180910390f35b34801561036d57600080fd5b506103cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e1b565b604051808215151515815260200191505060405180910390f35b3480156103f257600080fd5b50610427600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea0565b604051808215151515815260200191505060405180910390f35b34801561044d57600080fd5b50610456610f95565b6040518082815260200191505060405180910390f35b34801561047857600080fd5b506104bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610f9b565b005b3480156104c957600080fd5b506104d261118e565b6040518082815260200191505060405180910390f35b3480156104f457600080fd5b50610533600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611194565b604051808215151515815260200191505060405180910390f35b34801561055957600080fd5b5061058e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111cd565b005b34801561059c57600080fd5b506105df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050611374565b005b3480156105ed57600080fd5b5061062c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115d5565b604051808215151515815260200191505060405180910390f35b34801561065257600080fd5b50610687600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611867565b6040518082815260200191505060405180910390f35b3480156106a957600080fd5b506106b26118af565b005b3480156106c057600080fd5b50610715600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119b4565b005b34801561072357600080fd5b5061072c611e79565b604051808215151515815260200191505060405180910390f35b34801561075257600080fd5b5061075b611f41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107a957600080fd5b506107b2611f67565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f25780820151818401526020810190506107d7565b50505050905090810190601f16801561081f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561083957600080fd5b50610878600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612005565b604051808215151515815260200191505060405180910390f35b34801561089e57600080fd5b506108d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612088565b604051808215151515815260200191505060405180910390f35b3480156108f957600080fd5b5061092e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097c57600080fd5b506109b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061214d565b604051808215151515815260200191505060405180910390f35b3480156109d757600080fd5b50610a16600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612199565b604051808215151515815260200191505060405180910390f35b348015610a3c57600080fd5b50610a91600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612395565b6040518082815260200191505060405180910390f35b348015610ab357600080fd5b50610ae8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061241c565b005b348015610af657600080fd5b50610b39600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050612484565b604051808215151515815260200191505060405180910390f35b600360149054906101000a900460ff1681565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d5e57600080fd5b60088054905082101515610d7157600080fd5b600882815481101515610d8057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e1057600080fd5b600880549050905090565b600082600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515610e7857600080fd5b610e8184612516565b610e8b858461260a565b610e9685858561282c565b9150509392505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610efe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60045481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ff957600080fd5b82600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161415151561105457600080fd5b60006001026000191683600019161415151561106f57600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150826000191682600019161415156111885782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f63ec12603f028c6f74dc3c59a67d645d431250142b56676015d25475ee3fc3d3848660405180836000191660001916815260200182600019166000191681526020019250505060405180910390a35b50505050565b60095481565b60006009546111ae83600154612be790919063ffffffff16565b111515156111bb57600080fd5b6111c58383612c03565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561122957600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561127657600080fd5b600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001916141515611371576000600102600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8071c01a493142de896a206c19ca180d32e91d6486fcf11ea299f569f5d922b560405160405180910390a35b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113d057600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561146b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114a757600080fd5b6000600102600019168260001916141515156114c257600080fd5b600060010260001916600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151561151b57600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb4f9d1d687d745820ae7c948518d6eef182cfbf5ef20b5b6a33769059592e7c88460405180826000191660001916815260200191505060405180910390a3505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156116e7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061177b565b6116fa8382612cf490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190b57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a1257600080fd5b826000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515611a6257600080fd5b826000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515611ab157600080fd5b83600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515611b0c57600080fd5b6000600102600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816000191690555084600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403935084600885815481101515611c2b57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb64971100522354f3d25283cb14e2eefcb0dd26a757482ccfe42479d0a68685760405160405180910390a4505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ed757600080fd5b600360149054906101000a900460ff16151515611ef357600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ffd5780601f10611fd257610100808354040283529160200191611ffd565b820191906000526020600020905b815481529060010190602001808311611fe057829003601f168201915b505050505081565b600082600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161415151561206257600080fd5b61206b84612516565b612075338461260a565b61207f8484612d0d565b91505092915050565b60008060010260001916600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614159050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561213d57600080fd5b61214682612f2d565b9050919050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414159050919050565b600061222a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561247857600080fd5b61248181612fe1565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156124c35760009050612510565b8160001916600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161490505b92915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156126075760088190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600080600080846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039350600084111561266157612824565b6001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403925060016008805490500391506008828154811015156126c057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806008848154811015156126fd57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060088054809190600190036127dd91906132c3565b506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050505050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561287b57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561290657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561294257600080fd5b612993826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612a26826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612af782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60008183019050828110151515612bfa57fe5b80905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c6157600080fd5b600360149054906101000a900460ff16151515612c7d57600080fd5b82600060010260001916600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000191614151515612cd857600080fd5b612ce184612516565b612ceb84846130dd565b91505092915050565b6000828211151515612d0257fe5b818303905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612d5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612d9857600080fd5b612de9826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e7c826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612fcf57829150612fdb565b612fd881612f2d565b91505b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561301d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561313b57600080fd5b600360149054906101000a900460ff1615151561315757600080fd5b61316c82600154612be790919063ffffffff16565b6001819055506131c3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612be790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b8154818355818111156132ea578183600052602060002091820191016132e991906132ef565b5b505050565b61331191905b8082111561330d5760008160009055506001016132f5565b5090565b905600a165627a7a723058208a8f9202b217569a5d4119080ff53a3bf614139d5d15db21a2ec45ca5ebcedf70029",
  "sourceMap": "140:315:4:-;;;466:5:12;436:35;;;;;;;;;;;;;;;;;;;;1018:1:3;995:24;;205:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;239:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;360:93;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:8;575:10:7;567:5;;:18;;;;;;;;;;;;;;;;;;250:1:9;243:4;:8;235:17;;;;;;;;264:4;258:3;:10;;;;196:77;360:93:4;140:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "140:315:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:12;;;;;;;;;;;;;;;;;;;;;;;;;;;239:47:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;239:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:8;;;;;;;;;;;;;;;;;;;;;;;2924:198:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2924:198:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2441:139:3;;;;;;;;;;;;;;;;;;;;;;;8101:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8101:266:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9737:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9737:168:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:24:3;;;;;;;;;;;;;;;;;;;;;;;5311:357;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5311:357:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:18:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:18:9;;;;;;;;;;;;;;;;;;;;;;;509:178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;509:178:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4413:274:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4413:274:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:335;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3647:335:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:7;;;;;;6319:788:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6319:788:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1280:140:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:140:12;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;205:28:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;205:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7483:244:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7483:244:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8558:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8558:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10265:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10265:157:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8887:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8887:135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;9313:218:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9313:218:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:12;;;;;;;;;;;;;:::o;239:47:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:14:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;389:83:8:-;433:7;455:12;;448:19;;389:83;:::o;2924:198:3:-;3020:7;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;3059:12:3;:19;;;;3051:5;:27;3043:36;;;;;;;;3096:12;3109:5;3096:19;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:26;;2924:198;;;:::o;2441:139::-;2527:4;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;2554:12:3;:19;;;;2547:26;;2441:139;:::o;8101:266::-;8226:4;8205:2;930:1;922:10;;1283:28;;;:8;:14;1292:4;1283:14;;;;;;;;;;;;;;;;:28;;;;;1275:37;;;;;;;;8246:22;8265:2;8246:18;:22::i;:::-;8278:30;8296:4;8302:5;8278:17;:30::i;:::-;8325:35;8344:4;8350:2;8354:5;8325:18;:35::i;:::-;8318:42;;8101:266;;;;;;:::o;9737:168::-;9836:4;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;986:1:3;9863:35;;:13;:19;9877:4;9863:19;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;9856:42;;9737:168;;;:::o;995:24::-;;;;:::o;5311:357::-;5479:15;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;5422:4:3;930:1;922:10;;1283:28;;;:8;:14;1292:4;1283:14;;;;;;;;;;;;;;;;:28;;;;;1275:37;;;;;;;;930:1;922:10;;5450:18;;;:4;:18;;;;;5442:27;;;;;;;;5497:8;:14;5506:4;5497:14;;;;;;;;;;;;;;;;5479:32;;5536:4;5525:15;;;:7;:15;;;;;5521:141;;;5573:4;5556:8;:14;5565:4;5556:14;;;;;;;;;;;;;;;:21;;;;;;;5640:10;5596:55;;5619:4;5596:55;;;5625:7;5634:4;5596:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5521:141;731:1:7;5311:357:3;;;:::o;173:18:9:-;;;;:::o;509:178::-;589:4;640:3;;611:25;628:7;611:12;;:16;;:25;;;;:::i;:::-;:32;;603:41;;;;;;;;658:24;669:3;674:7;658:10;:24::i;:::-;651:31;;509:178;;;;:::o;4413:274:3:-;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;4524:1:3;4506:8;:14;4515:4;4506:14;;;;;;;;;;;;;;;;:19;4498:28;;;;;;;;930:1;922:10;;4540:28;;;:8;:14;4549:4;4540:14;;;;;;;;;;;;;;;;:28;;;;;4536:145;;;930:1;922:10;;4584:8;:14;4593:4;4584:14;;;;;;;;;;;;;;;:27;;;;;;;4659:10;4630:40;;4653:4;4630:40;;;;;;;;;;;;4536:145;4413:274;:::o;3647:335::-;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;3752:4:3;986:1;1603:35;;:13;:19;1617:4;1603:19;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;1595:44;;;;;;;;986:1;3780:20;;:4;:20;;;;3772:29;;;;;;;;930:1;922:10;;3819:18;;;:4;:18;;;;;3811:27;;;;;;;;930:1;922:10;;3856:28;;;:8;:14;3865:4;3856:14;;;;;;;;;;;;;;;;:28;;;;3848:37;;;;;;;;3912:4;3895:8;:14;3904:4;3895:14;;;;;;;;;;;;;;;:21;;;;;;;3964:10;3931:44;;3952:4;3931:44;;;3958:4;3931:44;;;;;;;;;;;;;;;;;;;;;;;;731:1:7;3647:335:3;;:::o;3679:432:14:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;1149:99:8:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;1001:111:7:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;6319:788:3:-;6744:19;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;6439:8:3;1414:1;1391:13;:19;1405:4;1391:19;;;;;;;;;;;;;;;;:24;;1383:33;;;;;;;;6474:11;1521:1;1498:13;:19;1512:4;1498:19;;;;;;;;;;;;;;;;:24;1490:33;;;;;;;;6513:11;930:1;922:10;;1283:28;;;:8;:14;1292:4;1283:14;;;;;;;;;;;;;;;;:28;;;;;1275:37;;;;;;;;930:1;922:10;;6656:8;:18;6665:8;6656:18;;;;;;;;;;;;;;;:31;;;;;;;6723:11;6697:13;:23;6711:8;6697:23;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6792:1;6766:13;:23;6780:8;6766:23;;;;;;;;;;;;;;;;:27;6744:49;;6831:11;6803:12;6816:11;6803:25;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;6881:13;:23;6895:8;6881:23;;;;;;;;;;;;;;;;6852:13;:26;6866:11;6852:26;;;;;;;;;;;;;;;:52;;;;6940:1;6914:13;:23;6928:8;6914:23;;;;;;;;;;;;;;;:27;;;;6975:8;:18;6984:8;6975:18;;;;;;;;;;;;;;;;6951:8;:21;6960:11;6951:21;;;;;;;;;;;;;;;:42;;;;7024:1;7003:8;:18;7012:8;7003:18;;;;;;;;;;;;;;;:22;;;;7089:10;7040:60;;7076:11;7040:60;;7066:8;7040:60;;;;;;;;;;;;1533:1;1426;731::7;6319:788:3;;;:::o;1280:140:12:-;1339:4;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;511:15:12;;;;;;;;;;;510:16;502:25;;;;;;;;1369:4;1351:15;;:22;;;;;;;;;;;;;;;;;;1384:14;;;;;;;;;;1411:4;1404:11;;1280:140;:::o;238:20:7:-;;;;;;;;;;;;;:::o;205:28:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7483:244:3:-;7590:4;7569:2;930:1;922:10;;1283:28;;;:8;:14;1292:4;1283:14;;;;;;;;;;;;;;;;:28;;;;;1275:37;;;;;;;;7610:22;7629:2;7610:18;:22::i;:::-;7642:36;7660:10;7672:5;7642:17;:36::i;:::-;7695:25;7710:2;7714:5;7695:14;:25::i;:::-;7688:32;;7483:244;;;;;:::o;8558:141::-;8637:4;930:1;922:10;;8664:28;;;:8;:14;8673:4;8664:14;;;;;;;;;;;;;;;;:28;;;;;8657:35;;8558:141;;;:::o;10265:157::-;10365:7;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;10395:20:3;10410:4;10395:14;:20::i;:::-;10388:27;;10265:157;;;:::o;8887:135::-;8964:4;9014:1;8991:13;:19;9005:4;8991:19;;;;;;;;;;;;;;;;:24;;8984:31;;8887:135;;;:::o;2926:296:14:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;2321:153::-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1274:103:7:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;9313:218:3:-;9403:4;986:1;9427:20;;:4;:20;;;9423:63;;;9470:5;9463:12;;;;9423:63;9520:4;9502:22;;;:8;:14;9511:4;9502:14;;;;;;;;;;;;;;;;:22;;;;9495:29;;9313:218;;;;;:::o;11121:179::-;11221:1;11198:13;:19;11212:4;11198:19;;;;;;;;;;;;;;;;:24;11194:100;;;11260:12;11278:4;11260:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11260:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11238:13;:19;11252:4;11238:19;;;;;;;;;;;;;;;:45;;;;11194:100;11121:179;:::o;11666:851::-;11753:15;11860:19;11915:17;11968:18;11788:5;11771:8;:14;11780:4;11771:14;;;;;;;;;;;;;;;;:22;11753:40;;11817:1;11807:7;:11;11803:48;;;11834:7;;11803:48;11904:1;11882:13;:19;11896:4;11882:19;;;;;;;;;;;;;;;;:23;11860:45;;11957:1;11935:12;:19;;;;:23;11915:43;;11989:12;12002:9;11989:23;;;;;;;;;;;;;;;;;;;;;;;;;;;11968:44;;12113:10;12085:12;12098:11;12085:25;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;12316:13;:19;12330:4;12316:19;;;;;;;;;;;;;;;;12288:13;:25;12302:10;12288:25;;;;;;;;;;;;;;;:47;;;;12413:12;:21;;;;;;;;;;;;:::i;:::-;;12509:1;12487:13;:19;12501:4;12487:19;;;;;;;;;;;;;;;:23;;;;11666:851;;;;;;;:::o;726:470:14:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;1238:128:6:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1941:365:3:-;2082:4;719:5:7;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;511:15:12;;;;;;;;;;;510:16;502:25;;;;;;;;2060:3:3;930:1;922:10;;1283:28;;;:8;:14;1292:4;1283:14;;;;;;;;;;;;;;;;:28;;;;;1275:37;;;;;;;;2235:23;2254:3;2235:18;:23::i;:::-;2275:24;2286:3;2291:7;2275:10;:24::i;:::-;2268:31;;533:1:12;1941:365:3;;;;:::o;1060:116:6:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;626:321:8:-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;10631:272:3:-;10716:7;10739:17;10759:13;:19;10773:4;10759:19;;;;;;;;;;;;;;;;;;;;;;;;;10739:39;;986:1;10792:25;;:9;:25;;;10788:67;;;10840:4;10833:11;;;;10788:67;10871:25;10886:9;10871:14;:25::i;:::-;10864:32;;10631:272;;;;;:::o;1512:171:7:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;854:312:12:-;968:4;600:5;;;;;;;;;;;586:19;;:10;:19;;;578:28;;;;;;;;511:15;;;;;;;;;;;510:16;502:25;;;;;;;;997;1014:7;997:12;;:16;;:25;;;;:::i;:::-;982:12;:40;;;;1044:26;1062:7;1044:8;:13;1053:3;1044:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;1028:8;:13;1037:3;1028:13;;;;;;;;;;;;;;;:42;;;;1086:3;1081:18;;;1091:7;1081:18;;;;;;;;;;;;;;;;;;1131:3;1110:34;;1127:1;1110:34;;;1136:7;1110:34;;;;;;;;;;;;;;;;;;1157:4;1150:11;;854:312;;;;:::o;140:315:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './ERC884/ERC884ReferenceImpl.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol';\n\ncontract Veritoken884 is ERC884ReferenceImpl, CappedToken {\n\n    string public symbol = \"VTG\";\n    string public name = \"Veritoken Security Token\";\n\n    // Veritoken884 token MUST be initialized with a max capacity. \n   constructor(uint256 capacity) \n    ERC884ReferenceImpl()\n    CappedToken(capacity)\n   {\n\n   }\n}\n",
  "sourcePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/Veritoken884.sol",
  "ast": {
    "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/Veritoken884.sol",
    "exportedSymbols": {
      "Veritoken884": [942]
    },
    "id": 943,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884ReferenceImpl.sol",
        "file": "./ERC884/ERC884ReferenceImpl.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 917,
        "src": "26:42:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol",
        "id": 920,
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 1496,
        "src": "69:69:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 921,
              "name": "ERC884ReferenceImpl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 916,
              "src": "165:19:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC884ReferenceImpl_$916",
                "typeString": "contract ERC884ReferenceImpl"
              }
            },
            "id": 922,
            "nodeType": "InheritanceSpecifier",
            "src": "165:19:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 923,
              "name": "CappedToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1495,
              "src": "186:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedToken_$1495",
                "typeString": "contract CappedToken"
              }
            },
            "id": 924,
            "nodeType": "InheritanceSpecifier",
            "src": "186:11:4"
          }
        ],
        "contractDependencies": [303, 916, 1350, 1446, 1495, 1538, 1570, 1676, 1985],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 942,
        "linearizedBaseContracts": [942, 1495, 916, 1676, 1350, 1985, 1446, 303, 1538, 1570],
        "name": "Veritoken884",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 927,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 942,
            "src": "205:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 925,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "565447",
              "id": 926,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "228:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_20b3801ba700fbc317f93f0316b5971e5617665a7373ea1df65044fd5fd23b8f",
                "typeString": "literal_string \"VTG\""
              },
              "value": "VTG"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 930,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 942,
            "src": "239:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 928,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "239:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56657269746f6b656e20536563757269747920546f6b656e",
              "id": 929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "260:26:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4e4fbceee3696f47552e65377c36e108f0d00e9f216c383b0237b59f931dd3d3",
                "typeString": "literal_string \"Veritoken Security Token\""
              },
              "value": "Veritoken Security Token"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "446:7:4",
              "statements": []
            },
            "documentation": null,
            "id": 941,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 935,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 934,
                  "name": "ERC884ReferenceImpl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 916,
                  "src": "395:19:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC884ReferenceImpl_$916_$",
                    "typeString": "type(contract ERC884ReferenceImpl)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "395:21:4"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 937,
                    "name": "capacity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 932,
                    "src": "433:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 938,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 936,
                  "name": "CappedToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1495,
                  "src": "421:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedToken_$1495_$",
                    "typeString": "type(contract CappedToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "421:21:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "capacity",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "372:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:0:4"
            },
            "scope": 942,
            "src": "360:93:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 943,
        "src": "140:315:4"
      }
    ],
    "src": "0:456:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/Veritoken884.sol",
    "exportedSymbols": {
      "Veritoken884": [942]
    },
    "id": 943,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/sharad/Documents/olypsis/veritoken-sto/Veritoken-STO/contracts/token/ERC884/ERC884ReferenceImpl.sol",
        "file": "./ERC884/ERC884ReferenceImpl.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 917,
        "src": "26:42:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol",
        "id": 920,
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 1496,
        "src": "69:69:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 921,
              "name": "ERC884ReferenceImpl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 916,
              "src": "165:19:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC884ReferenceImpl_$916",
                "typeString": "contract ERC884ReferenceImpl"
              }
            },
            "id": 922,
            "nodeType": "InheritanceSpecifier",
            "src": "165:19:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 923,
              "name": "CappedToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1495,
              "src": "186:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedToken_$1495",
                "typeString": "contract CappedToken"
              }
            },
            "id": 924,
            "nodeType": "InheritanceSpecifier",
            "src": "186:11:4"
          }
        ],
        "contractDependencies": [303, 916, 1350, 1446, 1495, 1538, 1570, 1676, 1985],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 942,
        "linearizedBaseContracts": [942, 1495, 916, 1676, 1350, 1985, 1446, 303, 1538, 1570],
        "name": "Veritoken884",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 927,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 942,
            "src": "205:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 925,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "565447",
              "id": 926,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "228:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_20b3801ba700fbc317f93f0316b5971e5617665a7373ea1df65044fd5fd23b8f",
                "typeString": "literal_string \"VTG\""
              },
              "value": "VTG"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 930,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 942,
            "src": "239:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 928,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "239:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56657269746f6b656e20536563757269747920546f6b656e",
              "id": 929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "260:26:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4e4fbceee3696f47552e65377c36e108f0d00e9f216c383b0237b59f931dd3d3",
                "typeString": "literal_string \"Veritoken Security Token\""
              },
              "value": "Veritoken Security Token"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "446:7:4",
              "statements": []
            },
            "documentation": null,
            "id": 941,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 935,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 934,
                  "name": "ERC884ReferenceImpl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 916,
                  "src": "395:19:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC884ReferenceImpl_$916_$",
                    "typeString": "type(contract ERC884ReferenceImpl)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "395:21:4"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 937,
                    "name": "capacity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 932,
                    "src": "433:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 938,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 936,
                  "name": "CappedToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1495,
                  "src": "421:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedToken_$1495_$",
                    "typeString": "type(contract CappedToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "421:21:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "capacity",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "372:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:0:4"
            },
            "scope": 942,
            "src": "360:93:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 943,
        "src": "140:315:4"
      }
    ],
    "src": "0:456:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Mint",
          "type": "event",
          "signature": "0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885"
        },
        "0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08": {
          "anonymous": false,
          "inputs": [],
          "name": "MintFinished",
          "type": "event",
          "signature": "0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event",
          "signature": "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xb4f9d1d687d745820ae7c948518d6eef182cfbf5ef20b5b6a33769059592e7c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "addr",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "hash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "VerifiedAddressAdded",
          "type": "event",
          "signature": "0xb4f9d1d687d745820ae7c948518d6eef182cfbf5ef20b5b6a33769059592e7c8"
        },
        "0x8071c01a493142de896a206c19ca180d32e91d6486fcf11ea299f569f5d922b5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "addr",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "VerifiedAddressRemoved",
          "type": "event",
          "signature": "0x8071c01a493142de896a206c19ca180d32e91d6486fcf11ea299f569f5d922b5"
        },
        "0x63ec12603f028c6f74dc3c59a67d645d431250142b56676015d25475ee3fc3d3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "addr",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "oldHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "hash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "VerifiedAddressUpdated",
          "type": "event",
          "signature": "0x63ec12603f028c6f74dc3c59a67d645d431250142b56676015d25475ee3fc3d3"
        },
        "0xb64971100522354f3d25283cb14e2eefcb0dd26a757482ccfe42479d0a686857": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "original",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "replacement",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "VerifiedAddressSuperseded",
          "type": "event",
          "signature": "0xb64971100522354f3d25283cb14e2eefcb0dd26a757482ccfe42479d0a686857"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x1124d4bfF5466EE2c88473E9A8a1cEa119DD0C62",
      "transactionHash": "0x557cf7776333f83feae52c46b8e2f6d53ababbd82fa26a1b11db1fbee1a1e015"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-03T18:43:36.052Z",
  "devdoc": {
    "methods": {
      "addVerified(address,bytes32)": {
        "params": {
          "addr": "The address of the person represented by the supplied hash.",
          "hash": "A cryptographic hash of the address holder's verified information."
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "cancelAndReissue(address,address)": {
        "params": {
          "original": "The address to be superseded. This address MUST NOT be reused.",
          "replacement": "The address  that supersedes the original. This address MUST be verified."
        }
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens.",
        "return": "True if the operation was successful."
      },
      "getCurrentFor(address)": {
        "params": {
          "addr": "The superseded address."
        },
        "return": "the verified address that ultimately holds the share."
      },
      "hasHash(address,bytes32)": {
        "params": {
          "addr": "The address to test.",
          "hash": "The hash to test."
        },
        "return": "true if the hash matches the one supplied with the address in `addVerified`, or `updateVerified`."
      },
      "holderAt(uint256)": {
        "params": {
          "index": "The zero-based index of the holder."
        },
        "return": "the address of the token holder with the given index."
      },
      "holderCount()": {
        "return": "the number of unique addresses that own tokens."
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "isHolder(address)": {
        "params": {
          "addr": "The address to check."
        },
        "return": "true if the supplied address owns a token."
      },
      "isSuperseded(address)": {
        "params": {
          "addr": "The address to check."
        },
        "return": "true if the supplied address was superseded by another address."
      },
      "isVerified(address)": {
        "params": {
          "addr": "The address to test."
        },
        "return": "true if the address is known to the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will receive the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "removeVerified(address)": {
        "params": {
          "addr": "The verified address to be removed."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "updateVerified(address,bytes32)": {
        "params": {
          "addr": "The verified address of the person represented by the supplied hash.",
          "hash": "A new cryptographic hash of the address holder's updated verified information."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addVerified(address,bytes32)": {
        "notice": "Add a verified address, along with an associated verification hash to the contract. Upon successful addition of a verified address, the contract must emit `VerifiedAddressAdded(addr, hash, msg.sender)`. It MUST throw if the supplied address or hash are zero, or if the address has already been supplied."
      },
      "cancelAndReissue(address,address)": {
        "notice": "Cancel the original address and reissue the Tokens to the replacement address. Access to this function MUST be strictly controlled. The `original` address MUST be removed from the set of verified addresses. Throw if the `original` address supplied is not a shareholder. Throw if the replacement address is not a verified address. This function MUST emit the `VerifiedAddressSuperseded` event."
      },
      "getCurrentFor(address)": {
        "notice": "Gets the most recent address, given a superseded one. Addresses may be superseded multiple times, so this function needs to follow the chain of addresses until it reaches the final, verified address."
      },
      "hasHash(address,bytes32)": {
        "notice": "Checks that the supplied hash is associated with the given address."
      },
      "holderAt(uint256)": {
        "notice": "By counting the number of token holders using `holderCount` you can retrieve the complete list of token holders, one at a time. It MUST throw if `index >= holderCount()`."
      },
      "holderCount()": {
        "notice": "The number of addresses that own tokens."
      },
      "isHolder(address)": {
        "notice": "Checks to see if the supplied address is a share holder."
      },
      "isSuperseded(address)": {
        "notice": "Checks to see if the supplied address was superseded."
      },
      "isVerified(address)": {
        "notice": "Tests that the supplied address is known to the contract."
      },
      "removeVerified(address)": {
        "notice": "Remove a verified address, and the associated verification hash. If the address is unknown to the contract then this does nothing. If the address is successfully removed, this function must emit `VerifiedAddressRemoved(addr, msg.sender)`. It MUST throw if an attempt is made to remove a verifiedAddress that owns Tokens."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transfer(address,uint256)": {
        "notice": "The `transfer` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `msg.sender`'s balance to 0 then that address MUST be removed from the list of shareholders."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The `transferFrom` function MUST NOT allow transfers to addresses that have not been verified and added to the contract. If the `to` address is not currently a shareholder then it MUST become one. If the transfer will reduce `from`'s balance to 0 then that address MUST be removed from the list of shareholders."
      },
      "updateVerified(address,bytes32)": {
        "notice": "Update the hash for a verified address known to the contract. Upon successful update of a verified address the contract must emit `VerifiedAddressUpdated(addr, oldHash, hash, msg.sender)`. If the hash is the same as the value already stored then no `VerifiedAddressUpdated` event is to be emitted. It MUST throw if the hash is zero, or if the address is unverified."
      }
    }
  }
}
